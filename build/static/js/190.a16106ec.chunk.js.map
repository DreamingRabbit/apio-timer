{"version":3,"file":"static/js/190.a16106ec.chunk.js","mappings":"8JAIO,MAAMA,EAAeC,EAAAA,GAAOC,OAAO;;;;;EAO7BC,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,EAAI;;;;EAMtBC,GAAeJ,EAAAA,EAAAA,IAAO,MAAM;;;;;;EAQ5BK,GAAgBL,EAAAA,EAAAA,IAAO,MAAM;;;;;;yBChB1C,MAwFA,EAxFmBM,KACjB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACdC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,IAAIC,OAC5CC,EAAYC,IAAiBH,EAAAA,EAAAA,WAAsB,KACxD,MAAMI,EAAQC,aAAaC,QAAQ,cACnC,OAAOF,EAAQ,IAAIH,KAAKG,GAAS,IAAI,KAGvCG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAQC,aAAY,IAAMV,EAAe,IAAIE,OAAS,KAC5D,MAAO,IAAMS,cAAcF,EAAM,GAChC,IAEH,MAAMG,EAAoBC,IACxB,MAAOC,EAAOC,GAAWF,EAAEG,OAAOC,MAAMC,MAAM,KAAKC,IAAIC,QACjDC,EAAY,IAAInB,KACtBmB,EAAUC,SAASR,GACnBO,EAAUE,WAAWR,GACrBM,EAAUG,WAAW,GACrBH,EAAUI,gBAAgB,GAGtBJ,EAAY,IAAInB,MAClBmB,EAAUK,QAAQL,EAAUM,UAAY,GAG1CvB,EAAciB,GACdf,aAAasB,QAAQ,aAAcP,EAAUQ,cAAc,EAgB7D,GAAIhC,EACF,OACEiC,EAAAA,EAAAA,KAACzC,EAAY,CAAA0C,UACXD,EAAAA,EAAAA,KAACtC,EAAQ,CAAAuC,UACPC,EAAAA,EAAAA,MAACrC,EAAa,CAAAoC,SAAA,EACZD,EAAAA,EAAAA,KAAA,SAAOG,QAAQ,cAAaF,SAAC,+DAC7BD,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLC,GAAG,cACHC,MAAO,CACLC,SAAU,OACVC,UAAW,QAEbC,SAAU3B,EACVK,MACEd,EACI,GAAGqC,OAAOrC,EAAWsC,YAAYC,SAAS,EAAG,QAAQF,OACnDrC,EAAWwC,cACXD,SAAS,EAAG,OACd,YASlB,IAAKvC,EAAY,OAAO,KAExB,MAAMyC,EAAgBC,KAAKC,IACzB,EACAD,KAAKE,OAAO5C,EAAW6C,UAAYjD,EAAYiD,WAAa,MAG9D,OACElB,EAAAA,EAAAA,KAACzC,EAAY,CAAA0C,UACXC,EAAAA,EAAAA,MAACxC,EAAQ,CAAAuC,SAAA,EACPD,EAAAA,EAAAA,KAACpC,EAAY,CAAAqC,SAAEhC,EAAYkD,wBAC3BjB,EAAAA,EAAAA,MAACrC,EAAa,CAAAoC,SAAA,CAAC,0CApDDmB,EAoDqBN,EA1ChC,GATGC,KAAKE,MAAMG,EAAU,MAC5BC,WACAT,SAAS,EAAG,QACLG,KAAKE,MAAOG,EAAU,KAAQ,IACrCC,WACAT,SAAS,EAAG,QACLG,KAAKE,MAAMG,EAAU,IAC5BC,WACAT,SAAS,EAAG,gBATGQ,KAsDH,C","sources":["components/TimerBlock/styles.ts","components/TimerBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\"; // ✅ Don't forget this!\nimport { Row } from \"antd\";\n\n// this should be automatically flexed\nexport const TimerSection = styled.section`\n  height: 30vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TimerRow = styled(Row)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ClockDisplay = styled(\"div\")`\n  font-size: 8vw;\n  font-weight: bold;\n  text-align: center;\n  color: #111827; // Elegant deep black-blue\n  text-shadow: none; \n`;\n\nexport const RemainingTime = styled(\"div\")`\n  font-size: 2vw;\n  font-weight: bold;\n  text-align: center;\n  color: #6b7280; // Soft gray\n  text-shadow: none; \n`;","import React, { useEffect, useState } from \"react\";\nimport {\n  TimerSection,\n  TimerRow,\n  ClockDisplay,\n  RemainingTime,\n} from \"./styles\";\nimport { useLogin } from \"../../contexts/LoginContext\";\n\nconst TimerBlock = () => {\n  const { loggedIn } = useLogin();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [targetTime, setTargetTime] = useState<Date | null>(() => {\n    const saved = localStorage.getItem(\"targetTime\");\n    return saved ? new Date(saved) : null;\n  });\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const handleTimeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const [hours, minutes] = e.target.value.split(\":\").map(Number);\n    const newTarget = new Date();\n    newTarget.setHours(hours);\n    newTarget.setMinutes(minutes);\n    newTarget.setSeconds(0);\n    newTarget.setMilliseconds(0);\n\n    // If the selected time is earlier than now, assume it's for tomorrow\n    if (newTarget < new Date()) {\n      newTarget.setDate(newTarget.getDate() + 1);\n    }\n\n    setTargetTime(newTarget);\n    localStorage.setItem(\"targetTime\", newTarget.toISOString());\n  };\n\n  const formatTime = (seconds: number) => {\n    const h = Math.floor(seconds / 3600)\n      .toString()\n      .padStart(2, \"0\");\n    const m = Math.floor((seconds % 3600) / 60)\n      .toString()\n      .padStart(2, \"0\");\n    const s = Math.floor(seconds % 60)\n      .toString()\n      .padStart(2, \"0\");\n    return `${h}:${m}:${s}`;\n  };\n\n  if (loggedIn) {\n    return (\n      <TimerSection>\n        <TimerRow>\n          <RemainingTime>\n            <label htmlFor=\"target-time\">设置比赛结束时间 (HH:MM):</label>\n            <input\n              type=\"time\"\n              id=\"target-time\"\n              style={{\n                fontSize: \"1rem\",\n                marginTop: \"1rem\",\n              }}\n              onChange={handleTimeChange}\n              value={\n                targetTime\n                  ? `${String(targetTime.getHours()).padStart(2, \"0\")}:${String(\n                      targetTime.getMinutes()\n                    ).padStart(2, \"0\")}`\n                  : \"\"\n              }\n            />\n          </RemainingTime>\n        </TimerRow>\n      </TimerSection>\n    );\n  }\n\n  if (!targetTime) return null;\n\n  const diffInSeconds = Math.max(\n    0,\n    Math.floor((targetTime.getTime() - currentTime.getTime()) / 1000)\n  );\n\n  return (\n    <TimerSection>\n      <TimerRow>\n        <ClockDisplay>{currentTime.toLocaleTimeString()}</ClockDisplay>\n        <RemainingTime>距离比赛结束: {formatTime(diffInSeconds)}</RemainingTime>\n      </TimerRow>\n    </TimerSection>\n  );\n};\n\nexport default TimerBlock;"],"names":["TimerSection","styled","section","TimerRow","Row","ClockDisplay","RemainingTime","TimerBlock","loggedIn","useLogin","currentTime","setCurrentTime","useState","Date","targetTime","setTargetTime","saved","localStorage","getItem","useEffect","timer","setInterval","clearInterval","handleTimeChange","e","hours","minutes","target","value","split","map","Number","newTarget","setHours","setMinutes","setSeconds","setMilliseconds","setDate","getDate","setItem","toISOString","_jsx","children","_jsxs","htmlFor","type","id","style","fontSize","marginTop","onChange","String","getHours","padStart","getMinutes","diffInSeconds","Math","max","floor","getTime","toLocaleTimeString","seconds","toString"],"sourceRoot":""}